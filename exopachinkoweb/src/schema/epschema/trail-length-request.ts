// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class TrailLengthRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):TrailLengthRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsTrailLengthRequest(bb:flatbuffers.ByteBuffer, obj?:TrailLengthRequest):TrailLengthRequest {
  return (obj || new TrailLengthRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsTrailLengthRequest(bb:flatbuffers.ByteBuffer, obj?:TrailLengthRequest):TrailLengthRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new TrailLengthRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

sessionId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startTrailLengthRequest(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addSessionId(builder:flatbuffers.Builder, sessionId:number) {
  builder.addFieldInt32(0, sessionId, 0);
}

static addLength(builder:flatbuffers.Builder, length:number) {
  builder.addFieldFloat32(1, length, 0.0);
}

static endTrailLengthRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createTrailLengthRequest(builder:flatbuffers.Builder, sessionId:number, length:number):flatbuffers.Offset {
  TrailLengthRequest.startTrailLengthRequest(builder);
  TrailLengthRequest.addSessionId(builder, sessionId);
  TrailLengthRequest.addLength(builder, length);
  return TrailLengthRequest.endTrailLengthRequest(builder);
}
}
